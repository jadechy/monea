import{a3 as w,a1 as M,f,x as o,z as F}from"./DZ2khTnM.js";const S=t=>{const{postGroup:s,editGroup:i,deleteGroup:c,uploadFile:l}=w(),p=M(),r=async()=>{await Promise.all([p.invalidateQueries({queryKey:["groups-by-user"]})])},u=f(),{trackMatomoEvent:d}=F(),m=o({mutationFn:e=>s(e),onSuccess:async()=>{await r(),u.push({name:"groups"})}}),y=o({mutationFn:e=>{var a;return(a=t==null?void 0:t.value)!=null&&a.id?(d("Group","Create","create_group"),i(t.value.id,e)):Promise.reject(new Error("ID du groupe manquant"))},onSuccess:async()=>{await r(),u.push({name:"groups"})}}),v=o({mutationFn:()=>{var e;return(e=t.value)!=null&&e.id?c(t.value.id):Promise.reject(new Error("ID du groupe manquant"))},onSuccess:async()=>{await r(),u.push({name:"groups"})}}),G=o({mutationFn:async e=>{var n;const a=new FormData;return a.append("picture",e),l(Number((n=t.value)==null?void 0:n.id),a)},onSuccess:async()=>{await r()},onError:e=>{console.error("Upload failed",e),alert("Erreur lors de l'upload")}});return{createGroupMutation:m,editGroupMutation:y,deleteGroupMutation:v,uploadCoverGroupMutation:G}};export{S as u};
