version: "3.8"

services:
  frontend:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    read_only: true
    tmpfs:
      - /tmp
      - /var/cache/nginx
    user: "1000:1000"
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    depends_on:
      - backend
    networks:
      - frontend_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
      args:
        TIMEZONE: Europe/Paris
    restart: unless-stopped
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp
      - /var/cache
    user: "www-data:www-data"
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    env_file:
      - ./back/.env.production
    volumes:
      - vendor-data:/var/www/html/vendor:ro
      - storage-data:/var/www/html/storage
      - logs-data:/var/log/app
    depends_on:
      db:
        condition: service_healthy
      mailer:
        condition: service_healthy
    networks:
      - backend_network
    healthcheck:
      test: ["CMD", "php", "-f", "/var/www/html/healthcheck.php"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    read_only: true
    tmpfs:
      - /tmp
      - /var/cache/nginx
      - /var/run
    user: "nginx:nginx"
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
      - NET_BIND_SERVICE
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - logs-data:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - frontend_network
      - backend_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: mysql:8.0
    platform: linux/x86_64
    restart: unless-stopped
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/mysqld
    user: "mysql:mysql"
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
    secrets:
      - mysql_root_password
      - mysql_password
    volumes:
      - db-data:/var/lib/mysql
      - ./mysql/conf.d:/etc/mysql/conf.d:ro
      - logs-data:/var/log/mysql
    networks:
      - backend_network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p$$(cat /run/secrets/mysql_root_password)",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  mailer:
    image: axllent/mailpit:latest
    restart: unless-stopped
    read_only: true
    tmpfs:
      - /tmp
    user: "1000:1000"
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    ports:
      - "127.0.0.1:8025:8025"
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: 0
      MP_SMTP_AUTH_ALLOW_INSECURE: 0
      MP_SMTP_AUTH_FILE: /run/secrets/mailpit_auth
      MP_UI_AUTH_FILE: /run/secrets/mailpit_auth
      MP_SMTP_TLS_CERT: /run/secrets/mailpit_tls_cert
      MP_SMTP_TLS_KEY: /run/secrets/mailpit_tls_key
    secrets:
      - mailpit_auth
      - mailpit_tls_cert
      - mailpit_tls_key
    networks:
      - backend_network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8025/api/v1/info",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

secrets:
  mysql_root_password:
    file: ./secrets/mysql_root_password.txt
  mysql_password:
    file: ./secrets/mysql_password.txt
  mailpit_auth:
    file: ./secrets/mailpit_auth.txt
  mailpit_tls_cert:
    file: ./secrets/mailpit_tls_cert.pem
  mailpit_tls_key:
    file: ./secrets/mailpit_tls_key.pem

volumes:
  db-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/docker/volumes/monea_db_data/_data
  vendor-data:
    driver: local
  storage-data:
    driver: local
  logs-data:
    driver: local

networks:
  frontend_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
  backend_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
